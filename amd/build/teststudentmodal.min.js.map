{"version":3,"file":"teststudentmodal.min.js","sources":["../src/teststudentmodal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * External functions repository for theme_urcourses_default.\n *\n * @module  theme_urcourses\n * @author  2024 John Lane <john.lane@uregina.ca>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Repository from 'theme_urcourses/repository';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport ModalEvents from 'core/modal_events';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport ModalCancel from 'core/modal_cancel';\nimport Notification from 'core/notification';\n\nconst SELECTORS = {\n    CREATE_TEST_STUDENT: '#user-action-menu a[data-action=\"createteststudent\"]',\n    RESET_TEST_STUDENT: '#user-action-menu a[data-action=\"resetteststudent\"]'\n};\n\nconst TEMPLATES = {\n    CREATE_TEST_STUDENT_MODAL: 'theme_urcourses/create_test_student_modal',\n    RESET_TEST_STUDENT_MODAL: 'theme_urcourses/reset_test_student_modal'\n};\n\nconst init = (root) => {\n    registerEventListeners($(root));\n};\n\nconst registerEventListeners = (root) => {\n    root.on('click', SELECTORS.CREATE_TEST_STUDENT, async (e) => {\n        e.preventDefault();\n        const testStudent = await Repository.testAccountInfo();\n        testStudentModal(\n            getString('createmodal_title', 'theme_urcourses'),\n            Templates.render(TEMPLATES.CREATE_TEST_STUDENT_MODAL, testStudent),\n            getString('createmodal_button', 'theme_urcourses'),\n            createTestStudent\n        );\n    });\n\n    root.on('click', SELECTORS.RESET_TEST_STUDENT, async (e) => {\n        e.preventDefault();\n        const testStudent = await Repository.testAccountInfo();\n        testStudentModal(\n            getString('resetmodal_title', 'theme_urcourses'),\n            Templates.render(TEMPLATES.RESET_TEST_STUDENT_MODAL, testStudent),\n            getString('resetmodal_button', 'theme_urcourses'),\n            () => {\n                resetTestStudentConfirm(testStudent);\n            }\n        );\n    });\n};\n\nconst testStudentModal = async (title, body, saveButton, saveAction) => {\n    try {\n        const modal = await ModalSaveCancel.create({\n            title: title,\n            body: body,\n            removeOnClose: true,\n            buttons: {\n                save: saveButton\n            },\n            show: true\n        });\n        modal.getRoot().on(ModalEvents.save, () => {\n            modal.destroy();\n            saveAction();\n        });\n    } catch (error) {\n        Notification.exception(error);\n    }\n};\n\nconst confirmModal = async (title, body, saveButton, saveAction) => {\n    try {\n        const modal = await ModalSaveCancel.create({\n            title: title,\n            body: body,\n            removeOnClose: true,\n            buttons: {\n                save: saveButton\n            },\n            show: true\n        });\n        modal.getRoot().on(ModalEvents.save, () => {\n            modal.destroy();\n            saveAction();\n        });\n    } catch (error) {\n        Notification.exception(error);\n    }\n};\n\nconst statusModal = async (title, body) => {\n    try {\n        await ModalCancel.create({\n            title: title,\n            body: body,\n            removeOnClose: true,\n            show: true,\n            buttons: {\n                cancel: getString('ok')\n            }\n        });\n    } catch (error) {\n        Notification.exception(error);\n    }\n};\n\nconst createTestStudent = async () => {\n    try {\n        const response = await Repository.createTestStudent();\n        if (response) {\n            statusModal(\n                getString('createsuccess_title', 'theme_urcourses'),\n                getString('createsuccess_body', 'theme_urcourses')\n            );\n        }\n    } catch (error) {\n        Notification.exception(error);\n    }\n};\n\nconst resetTestStudentConfirm = (testStudent) => {\n    confirmModal(\n        getString('resetmodal_title', 'theme_urcourses'),\n        getString('resetmodal_confirm', 'theme_urcourses', testStudent.username),\n        getString('resetmodal_button', 'theme_urcourses'),\n        resetTestStudentPassword\n    );\n};\n\nconst resetTestStudentPassword = async () => {\n    try {\n        const response = await Repository.resetTestStudent();\n        if (response) {\n            statusModal(\n                getString('resetsuccess_title', 'theme_urcourses'),\n                getString('resetsuccess_body', 'theme_urcourses')\n            );\n        }\n    } catch (error) {\n        Notification.exception(error);\n    }\n};\n\nexport default {\n    init: init,\n};"],"names":["SELECTORS","TEMPLATES","registerEventListeners","root","on","async","e","preventDefault","testStudent","Repository","testAccountInfo","testStudentModal","Templates","render","createTestStudent","resetTestStudentConfirm","title","body","saveButton","saveAction","modal","ModalSaveCancel","create","removeOnClose","buttons","save","show","getRoot","ModalEvents","destroy","error","exception","statusModal","ModalCancel","cancel","confirmModal","username","resetTestStudentPassword","resetTestStudent","init"],"mappings":";;;;;;;+iCAgCMA,8BACmB,uDADnBA,6BAEkB,sDAGlBC,oCACyB,4CADzBA,mCAEwB,2CAOxBC,uBAA0BC,OAC5BA,KAAKC,GAAG,QAASJ,+BAA+BK,MAAAA,IAC5CC,EAAEC,uBACIC,kBAAoBC,WAAWC,kBACrCC,kBACI,mBAAU,oBAAqB,mBAC/BC,mBAAUC,OAAOZ,oCAAqCO,cACtD,mBAAU,qBAAsB,mBAChCM,sBAIRX,KAAKC,GAAG,QAASJ,8BAA8BK,MAAAA,IAC3CC,EAAEC,uBACIC,kBAAoBC,WAAWC,kBACrCC,kBACI,mBAAU,mBAAoB,mBAC9BC,mBAAUC,OAAOZ,mCAAoCO,cACrD,mBAAU,oBAAqB,oBAC/B,KACIO,wBAAwBP,oBAMlCG,iBAAmBN,MAAOW,MAAOC,KAAMC,WAAYC,wBAE3CC,YAAcC,2BAAgBC,OAAO,CACvCN,MAAOA,MACPC,KAAMA,KACNM,eAAe,EACfC,QAAS,CACLC,KAAMP,YAEVQ,MAAM,IAEVN,MAAMO,UAAUvB,GAAGwB,sBAAYH,MAAM,KACjCL,MAAMS,UACNV,gBAEN,MAAOW,6BACQC,UAAUD,SAwBzBE,YAAc3B,MAAOW,MAAOC,kBAEpBgB,sBAAYX,OAAO,CACrBN,MAAOA,MACPC,KAAMA,KACNM,eAAe,EACfG,MAAM,EACNF,QAAS,CACLU,QAAQ,mBAAU,SAG5B,MAAOJ,6BACQC,UAAUD,SAIzBhB,kBAAoBT,oBAEKI,WAAWK,qBAE9BkB,aACI,mBAAU,sBAAuB,oBACjC,mBAAU,qBAAsB,oBAG1C,MAAOF,6BACQC,UAAUD,SAIzBf,wBAA2BP,cAlDZH,OAAOW,MAAOC,KAAMC,WAAYC,wBAEvCC,YAAcC,2BAAgBC,OAAO,CACvCN,MAAOA,MACPC,KAAMA,KACNM,eAAe,EACfC,QAAS,CACLC,KAAMP,YAEVQ,MAAM,IAEVN,MAAMO,UAAUvB,GAAGwB,sBAAYH,MAAM,KACjCL,MAAMS,UACNV,gBAEN,MAAOW,6BACQC,UAAUD,SAmC3BK,EACI,mBAAU,mBAAoB,oBAC9B,mBAAU,qBAAsB,kBAAmB3B,YAAY4B,WAC/D,mBAAU,oBAAqB,mBAC/BC,2BAIFA,yBAA2BhC,oBAEFI,WAAW6B,oBAE9BN,aACI,mBAAU,qBAAsB,oBAChC,mBAAU,oBAAqB,oBAGzC,MAAOF,6BACQC,UAAUD,sBAIhB,CACXS,KA5HUpC,OACVD,wBAAuB,mBAAEC"}